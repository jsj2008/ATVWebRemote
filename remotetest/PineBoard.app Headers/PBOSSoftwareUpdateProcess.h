//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ASAsset, ASAssetQuery, MSUUpdateBrainAssetLoader, NSTimer, TVSCacheDeletePurgeID, TVSStateMachine;

@interface PBOSSoftwareUpdateProcess : NSObject
{
    _Bool _needToCancelMSUOperation;	// 8 = 0x8
    _Bool _assetIsLarge;	// 9 = 0x9
    _Bool _isApplyingRecheckedUpdate;	// 10 = 0xa
    _Bool _sentDownloadFinishedCallback;	// 11 = 0xb
    unsigned long long _state;	// 16 = 0x10
    id <PBOSSoftwareUpdateProcessDelegate> _delegate;	// 24 = 0x18
    TVSStateMachine *_machine;	// 32 = 0x20
    unsigned long long _action;	// 40 = 0x28
    unsigned long long _deferredAction;	// 48 = 0x30
    ASAssetQuery *_assetQuery;	// 56 = 0x38
    ASAsset *_asset;	// 64 = 0x40
    MSUUpdateBrainAssetLoader *_brainLoader;	// 72 = 0x48
    NSTimer *_slowUpdateTimer;	// 80 = 0x50
    TVSCacheDeletePurgeID *_cacheDeletePurgeID;	// 88 = 0x58
}

+ (id)sharedProcess;	// IMP=0x000000010000f240
@property(retain, nonatomic) TVSCacheDeletePurgeID *cacheDeletePurgeID; // @synthesize cacheDeletePurgeID=_cacheDeletePurgeID;
@property(nonatomic) _Bool sentDownloadFinishedCallback; // @synthesize sentDownloadFinishedCallback=_sentDownloadFinishedCallback;
@property(nonatomic) _Bool isApplyingRecheckedUpdate; // @synthesize isApplyingRecheckedUpdate=_isApplyingRecheckedUpdate;
@property(nonatomic) _Bool assetIsLarge; // @synthesize assetIsLarge=_assetIsLarge;
@property(nonatomic) _Bool needToCancelMSUOperation; // @synthesize needToCancelMSUOperation=_needToCancelMSUOperation;
@property(retain, nonatomic) NSTimer *slowUpdateTimer; // @synthesize slowUpdateTimer=_slowUpdateTimer;
@property(retain, nonatomic) MSUUpdateBrainAssetLoader *brainLoader; // @synthesize brainLoader=_brainLoader;
@property(retain, nonatomic) ASAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) ASAssetQuery *assetQuery; // @synthesize assetQuery=_assetQuery;
@property(nonatomic) unsigned long long deferredAction; // @synthesize deferredAction=_deferredAction;
@property(nonatomic) unsigned long long action; // @synthesize action=_action;
@property(retain, nonatomic) TVSStateMachine *machine; // @synthesize machine=_machine;
@property(nonatomic) __weak id <PBOSSoftwareUpdateProcessDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
- (void).cxx_destruct;	// IMP=0x000000010001e698
- (id)_spaceCheckOptions;	// IMP=0x000000010001e304
- (void)_continueWithSufficientSpaceFor:(id)arg1;	// IMP=0x000000010001e220
- (_Bool)_wasStartedByBackgroundCheck;	// IMP=0x000000010001e1d0
- (_Bool)_wasStartedForRestore;	// IMP=0x000000010001e1ac
- (long long)compareOSVersion:(id)arg1 andBuild:(id)arg2 withOSVersion:(id)arg3 andBuild:(id)arg4;	// IMP=0x000000010001e0d0
- (id)_nameForAction:(unsigned long long)arg1;	// IMP=0x000000010001e030
- (void)_storeURLBagLoaded:(id)arg1;	// IMP=0x000000010001dfa4
- (id)_resultUserInfoWithError:(id)arg1;	// IMP=0x000000010001dd0c
- (void)_slowUpdateTimerFired:(id)arg1;	// IMP=0x000000010001dc0c
- (void)_stopSlowUpdateTimer;	// IMP=0x000000010001db64
- (void)_startSlowUpdateTimer;	// IMP=0x000000010001da9c
- (void)_forceRebootAfterCancel;	// IMP=0x000000010001d910
- (void)_cancelAndRebootDuringApply;	// IMP=0x000000010001d8d8
- (void)_cancelAndRebootDuringVerifyUnarchive;	// IMP=0x000000010001d728
- (void)_assetCleanupHandler:(id)arg1;	// IMP=0x000000010001d544
- (void)_cleanUpAsset;	// IMP=0x000000010001d380
- (void)_cancelUpdateDuringApply;	// IMP=0x000000010001d310
- (void)_cancelUpdateDuringDownload;	// IMP=0x000000010001d188
- (void)_cancelUpdatePreDownload;	// IMP=0x000000010001ce6c
- (void)_updateProgressStatus:(id)arg1;	// IMP=0x000000010001cbf0
- (void)_handleBrainDownloadProgressCallbackWithState:(id)arg1 error:(id)arg2;	// IMP=0x000000010001c1e4
- (void)_handleProgressCallbackVerifyExtractWithState:(id)arg1;	// IMP=0x000000010001bdfc
- (void)_handleProgressCallbackPausedWithState:(id)arg1;	// IMP=0x000000010001bc0c
- (void)_handleProgressCallbackDownloadingWithState:(id)arg1;	// IMP=0x000000010001b8c0
- (void)_handleProgressCallbackQueuedWithState:(id)arg1;	// IMP=0x000000010001b6b4
- (void)_handleProgressCallbackError:(id)arg1 inState:(id)arg2;	// IMP=0x000000010001b0dc
- (void)_handleProgressCallbackWithState:(id)arg1 error:(id)arg2;	// IMP=0x000000010001ae34
- (void)_prepareAndApplyUpdateThreaded;	// IMP=0x00000001000198e0
- (void)_prepareAndApplyUpdate;	// IMP=0x0000000100019568
- (void)_processPrepareAndApplyForRequiredSpace:(unsigned long long)arg1 andError:(id)arg2;	// IMP=0x000000010001926c
- (void)_clearPrepareAndApplySpaceWithInstallationSize:(unsigned long long)arg1 andPadding:(unsigned long long)arg2;	// IMP=0x0000000100018f94
- (void)_clearPrepareAndApplySpace;	// IMP=0x0000000100018ee0
- (void)_verifyAndUnarchiveUpdate;	// IMP=0x0000000100018bb4
- (void)_processVerifyAndUnarchiveSpaceCheckForRequiredSpace:(unsigned long long)arg1 hasSpace:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000001000188b0
- (void)_clearVerifyAndUnarchiveSpace;	// IMP=0x00000001000184fc
- (void)_downloadBrain;	// IMP=0x00000001000183b4
- (void)_processBrainDownloadSpaceCheckForBrainSize:(long long)arg1 error:(id)arg2;	// IMP=0x0000000100018040
- (void)_clearBrainDownloadSpace;	// IMP=0x0000000100017d24
- (void)_downloadAsset;	// IMP=0x0000000100017b9c
- (void)_processDownloadSpaceCheckForRequiredSpace:(unsigned long long)arg1 hasSpace:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000100017898
- (void)_checkAndClearAssetDownloadSpaceAttempt:(long long)arg1;	// IMP=0x0000000100017438
- (void)_clearAssetDownloadSpace;	// IMP=0x00000001000173b0
- (_Bool)_goodTimeToDownloadUpdate;	// IMP=0x000000010001722c
- (void)_determineAssetToApplyAsync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100016050
- (void)_recheckForNewerUpdate;	// IMP=0x0000000100015ca4
- (void)_performCheck;	// IMP=0x000000010001528c
- (void)_purgePreviousAssets;	// IMP=0x0000000100014d68
- (void)_registerHandlers;	// IMP=0x000000010000fd48
- (void)_processEvent:(id)arg1;	// IMP=0x000000010000fcd8
- (void)rebootDueToSlowUpdate;	// IMP=0x000000010000fcc4
- (void)cancelForReason:(unsigned long long)arg1;	// IMP=0x000000010000fcb0
- (void)resumeAfterDownload;	// IMP=0x000000010000fc9c
- (void)resumeAfterUpdateCheck;	// IMP=0x000000010000fc88
- (_Bool)isRunning;	// IMP=0x000000010000fc20
- (void)start;	// IMP=0x000000010000f938
- (_Bool)configureForAction:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010000f7f0
- (void)dealloc;	// IMP=0x000000010000f6c8
- (id)init;	// IMP=0x000000010000f2dc

@end

